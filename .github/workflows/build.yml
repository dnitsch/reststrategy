name: CI

on:
  pull_request:
    branches: [ master, main ]

permissions:
  pull-requests: read

jobs:
  # set-version:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: mcr.microsoft.com/dotnet/sdk:6.0 
  #   outputs:
  #     semVer: ${{ steps.gitversion.outputs.semVer }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Install GitVersion
  #       uses: gittools/actions/gitversion/setup@v0.9.15
  #       with:
  #         versionSpec: '5.x'
  #     - name: Set SemVer Version
  #       uses: gittools/actions/gitversion/execute@v0.9.15
  #       id: gitversion

  #     - name: echo VERSIONS
  #       run: | 
  #         echo "REVISION  -> $GITHUB_SHA"
  #         echo "VERSION -> $GITVERSION_SEMVER"
  test:
    runs-on: ubuntu-latest
    container:
      image: dnitsch/gha-dind:0.0.6 # docker:23.0.1-git
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      options: --privileged=true --group-add=docker
    # needs: set-version
    env:
      # SEMVER: ${{ needs.set-version.outputs.semVer }}
      # GIT_TAG: ${{ needs.set-version.outputs.semVer }}
      GOVCS: false
      # CGO_ENABLED: "0"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      # - uses: engineerd/setup-kind@v0.5.0
      #   with:
      #     version: "v0.17.0"
      # - uses: actions/setup-go@v3
      #   with:
      #     go-version: '1.19'
      - name: install deps
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.email ${{ github.actor }}-ci@gha.org
          git config user.name ${{ github.actor }}
      - name: make test 
        run: |
          export DOCKER_HOST=unix:///var/run/docker.sock
          echo "DOCKER_HOST: $DOCKER_HOST"
          ls -lat /var/run/docker.sock

          # kubectl cluster-info
          # kubectl get pods -n kube-system
          # echo "current-context:" $(kubectl config current-context)
          # echo "environment-kubeconfig:" ${KUBECONFIG}

          # mkdir -p  ~/.kube && echo 'apiVersion: v1
          # kind: Config
          # preferences: {}' > ~/.kube/config

          # export KUBECONFIG=~/.kube/config
          go test ./kubebuilder-controller/... -v -mod=readonly -timeout 10m0s
          # make REVISION=$GITHUB_SHA test
      - name: Publish Junit style Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/.coverage/report-junit.xml'
      - name: Analyze with SonarCloud         
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SEMVER: $SEMVER
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:             
            -Dsonar.projectVersion=${{ needs.set-version.outputs.semVer }}
            -Dsonar.go.tests.reportPaths=/github/workspace/controller/.coverage/report-junit.xml,/github/workspace/seeder/.coverage/report-junit.xml,/github/workspace/kubebuilder-controller/.coverage/report-junit.xml
            -Dsonar.go.coverage.reportPaths=/github/workspace/controller/.coverage/out,/github/workspace/seeder/.coverage/out,/github/workspace/kubebuilder-controller/.coverage/out

  kind-test:
    runs-on: ubuntu-latest
    container:
      image: dnitsch/gha-dind:0.0.6 # docker:23.0.1-git
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      options: --privileged=true --group-add=docker
    # needs: set-version
    env:
      # SEMVER: ${{ needs.set-version.outputs.semVer }}
      # GIT_TAG: ${{ needs.set-version.outputs.semVer }}
      GOVCS: false
      # CGO_ENABLED: "0"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.17.0"
      - name: DL tools
        run: |
          curl -LO https://dl.k8s.io/release/v1.26.1/bin/linux/amd64/kubectl
          install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Get KubeConfig 
        run: | 
          echo "get internal"
          kind get kubeconfig --internal
          echo "get normal"
          kind get kubeconfig
          echo "======= get internal IP ======="
          docker inspect "kind-control-plane" --format "{{ .NetworkSettings.Networks.kind.IPAddress }}"
      - name: Testing
        run: |
          kubectl config set clusters.kind-kind.server https://$(docker inspect "kind-control-plane" --format "{{ .NetworkSettings.Networks.kind.IPAddress }}"):6443
          kubectl cluster-info 
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
