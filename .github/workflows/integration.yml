name: integration

on:
  push:
    branches: [ master, main ]

jobs:
  test:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    container:
      image: golang:1.19-bullseye
      env:
        FOO: Bar
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: pre-requisites
        run: |
          mkdir -p ./ci-bin
          curl -L -o ./ci-bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x ./ci-bin/jq
          export PATH=$PATH:$PWD/ci-bin
          jq --version
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@latest
      - name: build
        run: | 
          echo "SEmVer: $GITVERSION_SEMVER"
          make test
          make GIT_TAG=$GITVERSION_SEMVER REVISION=${{ github.sha }} PAT=${{ secrets.GITHUB_TOKEN }} build_ci
      - name: Publish Junit style Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/report-junit.xml'
      - name: Analyze with SonarCloud         
        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:             
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=reststrategy
            -Dsonar.organization=dnitsch
            -Dsonar.tests=**/report-junit.xml 
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
      - name: publish
        run: |
          export PATH=$PATH:$PWD/ci-bin
          git config user.email ${{ github.actor }}-ci@gha.org
          git config user.name ${{ github.actor }}
          make REVISION=${{ github.sha }} tag
          make REVISION=${{ github.sha }} PAT=${{ secrets.GITHUB_TOKEN }} release
  build-and-push-docker-image:
    name: build docker image and push to gchr
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@latest
      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker push controller
        run: |
          echo "SEmVer: $GITVERSION_SEMVER"
          make GIT_TAG=$GITVERSION_SEMVER REVISION=${{ github.sha }} docker_release
