name: integration

on:
  push:
    branches: [ master, main ]

jobs:
  set-deps-dotnet-poop-here:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0 
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Set SemVer Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        id: gitversion

      - name: echo VERSIONS
        run: | 
          echo "REVISION  -> $GITHUB_SHA"
          echo "VERSION -> $GITVERSION_SEMVER"
  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.19-bullseye
    needs: set-deps-dotnet-poop-here
    env:
      SEMVER: ${{ needs.set-deps-dotnet-poop-here.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: pre-requisites
        run: |
          mkdir -p ./ci-bin
          curl -L -o ./ci-bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x ./ci-bin/jq
          export PATH=$PATH:$PWD/ci-bin
          jq --version
      - name: run tests
        run: | 
          echo "SEmVer: $SEMVER"
          make test
      - name: Publish Junit style Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/report-junit.xml'
      - name: Analyze with SonarCloud         
        # You can pin the exact commit or the version.
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:             
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectVersion=$SEMVER
            -Dsonar.go.coverage.reportPaths=/github/workspace/controller/.coverage/out,/github/workspace/seeder/.coverage/out
            -X
  publish-binary:
    name: tag repo and publish binary
    runs-on: ubuntu-latest
    container:
      image: golang:1.19-bullseye
    needs: 
      - set-deps-dotnet-poop-here
      - test
    env:
      SEMVER: ${{ needs.set-deps-dotnet-poop-here.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: generate binaries
        run: | 
          make GIT_TAG=$SEMVER REVISION=${{ github.sha }} PAT=${{ secrets.GITHUB_TOKEN }} build_ci
      - name: release library
        run: |
          export PATH=$PATH:$PWD/ci-bin
          git config user.email ${{ github.actor }}-ci@gha.org
          git config user.name ${{ github.actor }}
          make GIT_TAG=$SEMVER REVISION=${{ github.sha }} tag
      - name: release cli 
        run: |
          export PATH=$PATH:$PWD/ci-bin
          make GIT_TAG=$SEMVER REVISION=${{ github.sha }} PAT=${{ secrets.GITHUB_TOKEN }} release
  publish-docker-image:
    name: build docker image and push to gchr
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    # steps to perform in job
    needs: 
      - set-deps-dotnet-poop-here
      - test
    env:
      SEMVER: ${{ needs.set-deps-dotnet-poop-here.outputs.semVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker push controller
        run: |
          echo "SemVer: $SEMVER"
          make GIT_TAG=$SEMVER REVISION=${{ github.sha }} docker_release
