apiVersion: v1
kind: Namespace
metadata:
  name: reststrategy-ns
  labels:
    role: reststrategy
    app: reststrategy

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    role: reststrategy
    app: reststrategy
  namespace: reststrategy-ns
  name: reststrategy
  # annotations:
  #   eks.amazonaws.com/role-arn: "${K8S_SA_ROLE_ARN}"
automountServiceAccountToken: true

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: reststrategy-ns
  labels:
    role: reststrategy
    app: reststrategy
rules:
- apiGroups:
  - dnitsch.net
  resources:
  - reststrategies
  verbs:
  - list
  - watch
  - get
  - create
  - patch 
  - update
- apiGroups:
  - dnitsch.net
  resources:
  - reststrategies/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - list

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    role: reststrategy
    app: reststrategy    
  name: reststrategy-ns
roleRef:
  kind: ClusterRole
  name: reststrategy-ns
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: reststrategy
    namespace: reststrategy-ns

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: reststrategy
  namespace: reststrategy-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      role: reststrategy
      app: reststrategy
  template:
    metadata:
      labels:
        app: reststrategy
        role: reststrategy
    spec:
      serviceAccountName: reststrategy
      automountServiceAccountToken: true
      containers:
      - image: ghcr.io/dnitsch/reststrategy:v0.9.0
        imagePullPolicy: IfNotPresent
        name: reststrategy
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - --controllercount=2
          - --namespace=runtime-config-sync-in-k8s
          - --loglevel=debug
          - --rsync=4
