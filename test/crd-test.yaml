apiVersion: v1
kind: Namespace
metadata:
  name: reststrategy
  labels:
    role: test-int
---
apiVersion: dnitsch.net/v1alpha1
kind: RestStrategy
metadata:
  name: test-int
  namespace: reststrategy
spec:
  auth:
    - name: ouath1
      type: OAuthClientCredentials
      username: randClientIdOrUsernameForBasicAuth
      password: randClientSecret2
      oauth:
        serverUrl: http://localhost:8080/token
        scopes:
          - https://www.some-api-provider.com/scopes-example1
        endpointParams:
          foo:
            - bar
            - baz
      httpHeaders:
        X-Foo: bar
    - name: basic1
      type: BasicAuth
      username: randClientIdOrUsernameForBasicAuth
      password: randClientSecret
      httpHeaders:
        X-Foo: bar
    # https://pocketbase.io/docs/api-authentication/
    - name: customTest1
      type: CustomToToken
      custom:
        authUrl: http://127.0.0.1:54221/api/admins/auth-via-email
        credential:
          email: test@example.com
          password: P4s$w0rd123!
        responseKey: $.token
        headerKey: Authorization
        tokenPrefix: Admin
# /api/admins/auth-via-email
  seed:
  - name: update-test2-admin
    # /api/admins
    endpoint: http://127.0.0.1:54221/api/admins
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    # postEndpointSuffix: /post
    findByJsonPathExpr: "$.items[?(@.email=='test2@example.com')].id"
    authMapRef: customTest1
    payloadTemplate: |
      {"email": "test2@example.com",
        "password": "${password}","passwordConfirm": "${password}",
        "avatar": 8
      }
    patchPayloadTemplate: |
      {
        "password": "${password2}",
        "passwordConfirm": "${password2}"
      }
    variables:
      password: password123!
      password2: passwordaaa1111
    # RunTime Vars are captured from a PUT or POST and can be used further down the strategy tree
    runtimeVars:
      admin1AvatarId: "$.avatar"
  - name: update-test3-admin
    # /api/admins
    endpoint: http://127.0.0.1:54221/api/admins
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    # postEndpointSuffix: /post
    findByJsonPathExpr: "$.items[?(@.email=='test3@example.com')].id"
    authMapRef: customTest1
    payloadTemplate: |
      {"email": "test3@example.com",
        "password": "${password}",
        "passwordConfirm": "${password}",
        "avatar": 8
      }
    patchPayloadTemplate: |
      {
        "password": "${password2}",
        "passwordConfirm": "${password2}",
        "avatar": ${admin1AvatarId}
      }
    variables:
      password: password123!
      password2: password789!000
